<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jee="http://java.sun.com/xml/ns/javaee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd" >
    <!--http://www.w3.org/2001/XMLSchema-instance-->
    <!--http://www.w3.org/2001/XMLSchema-instance.xsd-->

<!--    多数据源配置-->
    <bean id="propertyConfigure" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >
    <property name="location" value="classpath:db.properties"/>
    </bean>

    <!-- 第二种方式：加载多个properties文件
    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:common.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="UTF-8"/>
    </bean>
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="properties" ref="configProperties"/>
    </bean>
    -->

    <bean id="dataSourceOne" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"  >
        <property name="driverClassName" value="${jdbc.one.driver}"/>
        <property name="url" value="${jdbc.one.url}"/>
        <property name="username" value="${jdbc.one.username}"/>
        <property name="password" value="${jdbc.one.password}"/>
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>
        <property name="maxIdle" value="${jdbc.maxIdle}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="maxWait" value="${jdbc.maxWait}"/>
        <property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}"/>
        <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
        <property name="numTestsPerEvictionRun" value="${jdbc.numTestsPerEvictionRun}"/>
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
    </bean>

    <bean id="dataSourceTwo" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"  >
        <property name="driverClassName" value="${jdbc.two.driver}"/>
        <property name="url" value="${jdbc.two.url}"/>
        <property name="username" value="${jdbc.two.username}"/>
        <property name="password" value="${jdbc.two.password}"/>
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>
        <property name="maxIdle" value="${jdbc.maxIdle}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="maxWait" value="${jdbc.maxWait}"/>
        <property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}"/>
        <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}"/>
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
        <property name="numTestsPerEvictionRun" value="${jdbc.numTestsPerEvictionRun}"/>
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
    </bean>
   <bean id="multipleDataSource" class="com.whg.UtilTools.MultipleDataSource">
<!-- 设置默认的数据源 -->
       <property name="defaultTargetDataSource" ref="dataSourceOne" />
       <property name="targetDataSources">
           <map>
<!--               这个KEY是对应数据源的别称，通过这个key可以找到对应的数据源 ，value-ref就是上面数据源的id-->
               <entry  key="dataSourceOneKey" value-ref="dataSourceOne" />
               <entry  key="dataSourceTwoKey" value-ref="dataSourceTwo" />
           </map>
       </property>
   </bean>
    <!--   让spring使用我们配置的多数据源-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="multipleDataSource" />

        <property name="plugins">
            <bean class="com.github.pagehelper.PageInterceptor">
                <property name="properties">
                    <value>

                        helperDialect=mysql
                        reasonable=true
                    </value>
                </property>

            </bean>
        </property>
    </bean>
<!--     mybatis.spring 自动映射-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.whg.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />

    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="multipleDataSource"/>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->

    <tx:annotation-driven transaction-manager="transactionManager"/>


    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
        </tx:attributes>
    </tx:advice>


    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver"></bean>
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize"  value="2000000" />
        <property name="maxUploadSizePerFile" value="200000" />
   </bean>
    <bean id="multipartResolver_Servlet3.0"  class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
    </bean>
<!--    the multipartResolver above is surpposed to be used when the Servelet version is  3.0 below ,if 3.0 above ,we can use another class "-->
<!--    org.springframework.web.multipart.support.StandardServletMultipartResolver" ,meanwhile ,make some configuration for servlet  with  "multipart-config" in web.xml-->


    <!--    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">-->
<!--        <property name="converters">-->
<!--            <list>-->
<!--                <bean class="com.whg.UtilTools.StringToDateConverter">-->
<!--                    <constructor-arg type="java.lang.String" value="MM-dd-yyyy"/>-->
<!--                </bean>-->
<!--            </list>-->

<!--        </property>-->
<!--    </bean>-->
<!--   for formmatter, can be replaced if possible or necessary-->
    <bean id="conversionSerice_formatter" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="formatters">
            <set>
                <bean class="com.whg.UtilTools.DateFormatter">
                    <constructor-arg type="java.lang.String" value="MM--dd-yyyy" />
                </bean>
            </set>
        </property>

    </bean>

    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean>-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean>-->



    <!--<bean  name="/product_input.action" class="com.whg.controller.InputProductController"/>-->
    <!--<bean  name="/product_save.action" class="com.whg.controller.SaveProductController" />-->

<!--    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">-->
<!--        <property name="registerDefaultFormatters">-->
<!--&lt;!&ndash;            the error below should be resolved ,wait and see&ndash;&gt;-->
<!--            <set>-->
<!--                <bean class="com.whg.UtilTools.MyFormatterRegistrar">-->
<!--                    <constructor-arg type="java.lang.String" value="MM-dd-yyyy" />-->
<!--                </bean>-->
<!--            </set>-->
<!--        </property>-->
<!--    </bean>-->

<!--消息-->
    <mvc:annotation-driven validator="validator"/>
<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" >
    <property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
    <property name="validationMessageSource" ref="validationMessageSource"></property>
</bean>

    <bean id="validationMessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource" >
        <property name="basenames" >
            <list>
                <value> /WEB-INF/resource/messages  </value>
                <value>/WEB-INF/resource/labels</value>
                <value>/WEB-INF/resource/messages_Zh.properties</value>
            </list>
        </property>
        <property name="fileEncodings" value="utf8"></property>
        <property name="cacheSeconds"  value="120"></property>
    </bean>

    <!--<context:annotation-config />-->
    <context:component-scan base-package="com.whg.controller" > </context:component-scan>
    <!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />-->
    <context:component-scan base-package="com.whg.service"/>
    <context:component-scan base-package="com.whg.UtilTools" /> <!-- this line for Formatter -->
<!--    <mvc:annotation-driven conversion-service="conversionService"/>  &lt;!&ndash; this line is for the Converters&ndash;&gt;-->
    <mvc:annotation-driven conversion-service="conversionSerice_formatter" />  <!--this line is ongly for Formatters -->

    <mvc:resources mapping="/css/*" location="/css/" />
    <mvc:resources mapping="/*.html" location="/"/>
    <mvc:resources mapping="/images/**" location="/images" />

<!-- AOP配置（事物控制）-->
<aop:config>
<!--    pointcut元素定义一个切入点，execution中的第以个星号，用以匹配方法的返回类型，这里星号表明匹配所有返回类型。com.abc.service.*.* (..)表明匹配com.abc.service-->
<!--    包下的所有类的所有方法。-->
<aop:pointcut id="myPoincut" expression="execution(* com.whg.service.*.*(..))"/>
<!--    将定义好的事物处理策略应用到上述的切入点-->
<aop:advisor advice-ref="txAdvice" pointcut-ref="myPoincut" />

</aop:config>
   <mvc:default-servlet-handler />
</beans>